<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.exam.wessm.mapper.ExamMapper">
    <!-- 查询所有考试-->
    <select id="queryExam" resultType="java.util.Map">
        <![CDATA[
        select
            e_id as eId,
            e_no as eNo,
            e_name as eName,
            m_name as mName,
            k_name as kName,
            time_begin as timeBegin,
            time_test as timeTest,
            time_baomin as timeBaomin,
            time_end as timeEnd
        from
             (exam left join subject on exam.k_id=subject.k_id)
            left join manager on exam.m_id=manager.m_id
        ]]>
    </select>
    <!-- 根据考试id加载考试信息-->
    <select id="getExamEId"  resultType="java.util.Map" parameterType="int">
        <![CDATA[
        select
            e_no as eNo,
            e_name as eName,
            m_name as mName,
            k_name as kName,
            exam.k_id as kId,
            time_begin as timeBegin,
            time_test as timeTest,
            time_baomin as timeBaomin,
            time_end as timeEnd

        from
             (exam left join subject on exam.k_id=subject.k_id)
            left join manager on exam.m_id=manager.m_id
        where e_id=#{e_id}
       ]]>
    </select>
    <!-- 根据关键字加载考试信息-->
    <select id="getExamExam"  resultType="java.util.Map" parameterType="java.util.Map">
        <![CDATA[
        select
           e_id as eId,
            e_no as eNo,
            e_name as eName,
            m_name as mName,
            k_name as kName,
            time_begin as timeBegin,
            time_test as timeTest,
            time_baomin as timeBaomin,
            time_end as timeEnd
        from
             (exam left join subject on exam.k_id=subject.k_id)
            left join manager on exam.m_id=manager.m_id
        where
            e_no=#{no} or e_name like #{name}
            or k_no=#{no} or k_name like #{name}
            or m_no=#{no} or m_name like #{name}
       ]]>
    </select>
    <!-- 添加考试信息-->
    <insert id="insertExam" parameterType="exam">
      <![CDATA[
        insert into exam (
            e_no ,
            e_name ,
            time_begin ,
            time_test,
            time_baomin ,
            time_end,
            k_id,
            m_id
        )
        values
        (
            #{eNo},
            #{eName},
            #{timeBegin},
            #{timeTest},
            #{timeBaomin},
            #{timeEnd},
            #{kId},
            #{mId}
         )
      ]]>
    </insert>
    <!-- 根据考试成员ID删除考试记录-->
    <delete id="deleteExam" parameterType="int">
        <![CDATA[
        delete from exam
        where e_id=#{e_id}
      ]]>
    </delete>
    <!-- 根据考试成员ID修改考试信息-->
    <update id="updateExam" parameterType="exam">
    <![CDATA[
        update  exam
        set     e_no=#{eNo} ,
                e_name=#{eName} ,
                time_begin=#{timeBegin} ,
                time_test=#{timeTest} ,
                time_baomin=#{timeBaomin} ,
                time_end=#{timeEnd}
        where   e_id=#{eId}
     ]]>
    </update>
    <!-- 根据考生编号加载考试信息-->
    <select id="getExamSNo"  resultType="java.util.Map" parameterType="String">
        <![CDATA[
        select
            exam.e_id as eId,
            e_no as eNo,
            e_name as eName,
            k_name as kName,
            time_begin as timeBegin,
            time_test as timeTest,
            time_baomin as timeBaomin,
            time_end as timeEnd
        from
             ((exam left join subject on exam.k_id=subject.k_id)
            left join examiners on exam.e_id=examiners.e_id)
			left join stu on examiners.s_id=stu.s_id
        where
            s_no=#{s_no} and time_begin <=NOW()
       ]]>
    </select>
    <!-- 根据考生ID加载考试信息-->
    <select id="getExamSId"  resultType="java.util.Map" parameterType="int">
        <![CDATA[
        select
            exam.e_id as eId,
            e_no as eNo,
            e_name as eName,
            k_name as kName,
            time_begin as timeBegin,
            time_test as timeTest,
            examCard as examCard,
            time_end as timeEnd,
            stu.s_id as sId
        from
             ((exam left join subject on exam.k_id=subject.k_id)
            left join examiners on exam.e_id=examiners.e_id)
			left join stu on examiners.s_id=stu.s_id
        where
            stu.s_id=#{s_id} and time_begin >=NOW()
       ]]>
    </select>
    <!-- 根据考生ID加载报名考试-->
    <select id="getExamBaoming"  resultType="java.util.Map" parameterType="int">
        <![CDATA[
           select
            exam.e_id as eId,
            e_no as eNo,
            e_name as eName,
            k_id as kId,
            k_name as kName,
            m_name as mName,
            time_begin as timeBegin,
            time_test as timeTest,
            time_baomin as timeBaomin,
            time_end as timeEnd,
            stu.s_id as stuId
        from
             (((exam left join subject on exam.k_id=subject.k_id)
            left join examiners on exam.e_id=examiners.e_id)
			left join stu on examiners.s_id=stu.s_id)
			left join manager on manager.m_id=exam.m_id
        where
             time_baomin <=NOW() and time_end>=NOW()
            and exam.e_id not in(select  examiners.e_id from examiners where s_id = #{s_id})
       ]]>
    </select>
    <!-- 根据下拉框加载考试-->
    <select id="queryExamKId" resultType="java.util.Map" parameterType="String">
        <![CDATA[
        select
            e_id as eId,
            e_no as eNo,
            e_name as eName,
            m_name as mName,
            k_name as kName,
            time_begin as timeBegin,
            time_test as timeTest,
            time_baomin as timeBaomin,
            time_end as timeEnd,
            exam.k_id as kId
        from
             (exam left join subject on exam.k_id=subject.k_id)
            left join manager on exam.m_id=manager.m_id
        where exam.k_id like #{k_id}
        ]]>
    </select>
</mapper>